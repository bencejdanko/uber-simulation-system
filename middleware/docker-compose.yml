# docker-compose.yml (Partial - Kafka Section Corrected)
version: '3.8'

services:
  # --- Apache Zookeeper ---
  zookeeper:
    image: bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data:/bitnami/zookeeper
    networks:
      - app-network

  # --- Apache Kafka Broker ---
  kafka:
    image: bitnami/kafka:3.5
    ports:
      # Port for clients OUTSIDE the Docker network (maps to EXTERNAL listener's container port 9094)
      - "9094:9094"
      # Port 9092 is used INTERNALLY by containers and doesn't need to be exposed to the host.
      # We explicitly bind to it inside the container using KAFKA_CFG_LISTENERS.
    environment:
      # --- Zookeeper Connection ---
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181

      # --- Listener Configuration (CRITICAL for Connectivity) ---
      # 1. Define Listener Names and Security Protocols
      #    Maps listener names (INTERNAL, EXTERNAL) to security protocols (PLAINTEXT).
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT

      # 2. Define Listeners the Broker Should *Bind* To
      #    Tells Kafka to listen on specific ports using the names defined above.
      #    INTERNAL listener binds to port 9092 on all container interfaces (accessible within Docker network).
      #    EXTERNAL listener binds to port 9094 on all container interfaces (accessible via the mapped port 9094 on the host).
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:9094
      # Note: Using :<port> or 0.0.0.0:<port> makes Kafka listen on all available network interfaces within the container.

      # 3. Define Advertised Listeners for Clients
      #    Tells clients *how* to connect to the broker, depending on where the client is.
      #    Clients inside the Docker network use the INTERNAL listener via the service name 'kafka' and port 9092.
      #    Clients outside the Docker network (on the host) use the EXTERNAL listener via 'localhost' and the mapped port 9094.
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://localhost:9094

      # 4. Define Internal Communication Listener
      #    Which listener Kafka uses for its own internal communication (inter-broker, controller).
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL

      # --- Topic Settings ---
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_CFG_NUM_PARTITIONS=3 # Default partitions for auto-created topics

      # --- Other Settings ---
      - ALLOW_PLAINTEXT_LISTENER=yes # Required by Bitnami for PLAINTEXT listeners
      - KAFKA_CFG_GROUP_INITIAL_REBALANCE_DELAY_MS=100 # Faster dev restarts

    volumes:
      - kafka_data:/bitnami/kafka
    depends_on:
      - zookeeper
    networks:
      - app-network

# --- Add other services below (ensure they are on app-network) ---
# Example: Your API Gateway
# api-gateway:
#   image: your-gateway-image
#   environment:
#     - KAFKA_BOOTSTRAP_SERVERS=kafka:9092 # Connects via INTERNAL listener
#   networks:
#     - app-network
#   depends_on:
#     - kafka

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

networks:
  app-network:
    driver: bridge