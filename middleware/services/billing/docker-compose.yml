services:
  # Billing Service
  billing-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      - MONGODB_URI=mongodb://mongoadmin:secret@mongodb:27017/uber_simulation?authSource=admin
      - BILLING_SERVICE_PORT=3003
      - KAFKA_BROKER=kafka:9092
      - REDIS_ENABLED=false
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your_secret_key
    depends_on:
      - mongodb
      - kafka
      - redis
    restart: unless-stopped

  # MongoDB
  mongodb:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongoadmin
      - MONGO_INITDB_ROOT_PASSWORD=secret

  # Zookeeper (required for Kafka)
  zookeeper:
    image: bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/bitnami/zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  # Kafka
  kafka:
    image: bitnami/kafka:3.5
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/bitnami/kafka
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_BROKER_ID=1
    depends_on:
      - zookeeper

  # Redis
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  mongodb_data:
  zookeeper_data:
  kafka_data:
  redis_data: